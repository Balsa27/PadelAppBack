// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PadelApp.Persistance.EFC;

#nullable disable

namespace PadelApp.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PadelApp.Domain.Aggregates.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("CourtImages")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("WorkingEndingTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("WorkingStartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Courts", (string)null);
                });

            modelBuilder.Entity("PadelApp.Domain.Aggregates.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppleId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GoogleId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BookerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CourtName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookerId");

                    b.HasIndex("CourtId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("WorkingEndingHours")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("WorkingStartHours")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Organizations", (string)null);
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.OrganizationCourt", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("OrganizationId", "CourtId");

                    b.HasIndex("CourtId");

                    b.ToTable("OrganizationCourt");
                });

            modelBuilder.Entity("PadelApp.Persistance.Dbos.BookingAttendee", b =>
                {
                    b.Property<Guid>("BookingId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("BookingId", "PlayerId");

                    b.ToTable("BookingAttendees", (string)null);
                });

            modelBuilder.Entity("PadelApp.Persistance.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("PadelApp.Domain.Aggregates.Court", b =>
                {
                    b.OwnsOne("PadelApp.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CourtId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("CourtId");

                            b1.ToTable("Courts");

                            b1.WithOwner()
                                .HasForeignKey("CourtId");
                        });

                    b.OwnsMany("PadelApp.Domain.ValueObjects.Price", "Prices", b1 =>
                        {
                            b1.Property<Guid>("CourtId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int?>("Day")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("Duration")
                                .HasColumnType("time(6)");

                            b1.Property<TimeSpan?>("TimeEnd")
                                .HasColumnType("time(6)");

                            b1.Property<TimeSpan?>("TimeStart")
                                .HasColumnType("time(6)");

                            b1.HasKey("CourtId", "Id");

                            b1.ToTable("CourtPrices", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CourtId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Booking", b =>
                {
                    b.HasOne("PadelApp.Domain.Aggregates.Player", null)
                        .WithMany()
                        .HasForeignKey("BookerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PadelApp.Domain.Aggregates.Court", null)
                        .WithMany("Bookings")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PadelApp.Domain.ValueObjects.WaitingList", "WaitingList", b1 =>
                        {
                            b1.Property<Guid>("BookingId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid?>("CurrentUserId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)");

                            b1.HasKey("BookingId");

                            b1.ToTable("BookingWaitingList", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.Navigation("WaitingList")
                        .IsRequired();
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Organization", b =>
                {
                    b.OwnsOne("PadelApp.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("OrganizationId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("OrganizationId");

                            b1.ToTable("OrganizationAddress", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrganizationId");
                        });

                    b.OwnsOne("PadelApp.Domain.ValueObjects.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("OrganizationId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("WebsiteUrl")
                                .HasColumnType("longtext");

                            b1.HasKey("OrganizationId");

                            b1.ToTable("OrganizationContactInfo", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrganizationId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactInfo");
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.OrganizationCourt", b =>
                {
                    b.HasOne("PadelApp.Domain.Entities.Organization", null)
                        .WithMany("Courts")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PadelApp.Persistance.Dbos.BookingAttendee", b =>
                {
                    b.HasOne("PadelApp.Domain.Entities.Booking", null)
                        .WithMany("Attendees")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PadelApp.Domain.Aggregates.Court", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Booking", b =>
                {
                    b.Navigation("Attendees");
                });

            modelBuilder.Entity("PadelApp.Domain.Entities.Organization", b =>
                {
                    b.Navigation("Courts");
                });
#pragma warning restore 612, 618
        }
    }
}
